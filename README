This file includes examples how to call the nfcjs library. Please run the them
in the chrome Javascript console (Ctrl+Shift+J).


/* enumerate NFC readers */
chrome.nfc.findDevices(function(devices) {
  var i;
  console.log("Found " + devices.length + " NFC device(s), listing below...");
  for (i = 0; i < devices.length; i++) {
    var r = devices[i];
    console.log("device[" + i + "]=(" + r.vendorId + ", " + r.productId + ")");
  }
});


/* reader mode */
chrome.nfc.findDevices(function(devices) {
  var device = devices[0];
  chrome.nfc.read(device, {}, function(type, ndef) {
    var text = ndef.ndef[0]["text"];
    console.log(type);
    if (text && (text == '[' || text == '{')) {
      var json = JSON.parse(text);
      console.log(json);
    } else {
      console.log(ndef);
    }
  });
});


/* writer mode */
chrome.nfc.findDevices(function(devices) {
  var device = devices[0];

  var ndef = [{"text": '{"UID":183424,"STATUS":true}'},
              {"uri": "http://ioto.pe/u/sp/devoxx/2012/fadad7d6"}];

  chrome.nfc.write(device, {"ndef": ndef}, function(rc) {
    if (!rc) {
      console.log("WRITE() success!");
    } else {
      console.log("WRITE() FAILED, rc = " + rc);
    }
  });
});


/* emulate tag */
chrome.nfc.findDevices(function(devices) {
  var device = devices[0];

  var ndef = [{"type": "URI", "uri": "http://chromium.org"}];

  chrome.nfc.emulate_tag(device, {"ndef": ndef}, function(rc) {
    if (!rc) {
      console.log("EMULATE() success!");
    } else {
      console.log("EMULATE() FAILED, rc = " + rc);
    }
  });
});


/* read logic mode -- Mifare Classic only */
chrome.nfc.findDevices(function(devices) {
  var device = devices[0];
  chrome.nfc.read_logic(device, 0, 2, function(rc, data) {
    console.log(UTIL_BytesToHex(data));
  });
});


/* write logic mode -- Mifare Classic only */
chrome.nfc.findDevices(function(devices) {
  var device = devices[0];
  var data = new Uint8Array([  // NDEF(http://google.com)
    0xdb, 0x00, 0x03, 0xe1, 0x00, 0x00, 0x00, 0x00,  // block 0 (MAD1)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // block 1 (MAD1)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x0f, 0xd1, 0x01, 0x0b, 0x55, 0x03, 0x67,  // block 2 (NDEF)
    0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x6f,
    0x6d, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // block 3 (NDEF)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  ]);
  chrome.nfc.write_logic(device, 0, data, function(rc) {
    console.log("WRITE_LOGIC() SUCCESS");
  });
});


